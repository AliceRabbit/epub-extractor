name: Go Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        go-version: [1.19.x]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build
        run: go build -v -o epub-extractor-${{ matrix.os }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: epub-extractor-${{ matrix.os }}
          path: epub-extractor-${{ matrix.os }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset for Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./epub-extractor-windows-latest
          asset_name: epub-extractor-windows-latest.exe
          asset_content_type: application/octet-stream
      - name: Upload Release Asset for Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./epub-extractor-ubuntu-latest
          asset_name: epub-extractor-ubuntu-latest
          asset_content_type: application/octet-stream
